<!--
  #%L
  kylo-service-app
  %%
  Copyright (C) 2017 ThinkBig Analytics
  %%
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
      http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  #L%
  -->
<databaseChangeLog
    xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd">

  <changeSet id="7" author="sr186054" runOnChange="true">
    <createView replaceIfExists="true" viewName="FEED_SUMMARY_VIEW">
      <![CDATA[
    SELECT
    CONCAT(f.name, COALESCE(e.JOB_EXECUTION_ID,-99)) as ID,
    f.id AS FEED_ID,
    f.name AS FEED_NAME,
    f.FEED_TYPE AS FEED_TYPE,
    f.IS_STREAM AS IS_STREAM,
    e.JOB_EXECUTION_ID AS JOB_EXECUTION_ID,
    e.JOB_INSTANCE_ID AS JOB_INSTANCE_ID,
    (CASE WHEN (f.IS_STREAM = 'Y' AND summary.RUNNING_COUNT IS NOT NULL) THEN
       (CASE WHEN (summary.RUNNING_COUNT > 0) THEN
          'STARTING'
        ELSE
          'STOPPED'
        END)
     ELSE
        e.STATUS
     END) AS STATUS,
    (CASE WHEN    (f.IS_STREAM = 'Y'AND summary.RUNNING_COUNT IS NOT NULL) THEN
       (CASE WHEN (summary.RUNNING_COUNT > 0) THEN
          'EXECUTING'
        ELSE
          'COMPLETED'
        END)
    ELSE
       e.EXIT_CODE
    END) AS EXIT_CODE,
    e.EXIT_MESSAGE AS EXIT_MESSAGE,
    e.START_TIME AS START_TIME,
    e.END_TIME AS END_TIME,
    summary.FAILED_COUNT AS FAILED_COUNT,
    summary.COMPLETED_COUNT AS COMPLETED_COUNT,
    summary.ABANDONED_COUNT AS ABANDONED_COUNT,
    summary.ALL_COUNT AS ALL_COUNT,
    summary.RUNNING_COUNT AS RUNNING_COUNT,
    'RUNNING' AS RUN_STATUS
    FROM FEED f
    LEFT JOIN BATCH_JOB_INSTANCE i ON i.FEED_ID = f.id
    LEFT JOIN BATCH_JOB_EXECUTION e ON e.JOB_INSTANCE_ID = i.JOB_INSTANCE_ID
    LEFT JOIN BATCH_FEED_SUMMARY_COUNTS_VW summary ON summary.FEED_ID = f.ID
    LEFT JOIN NIFI_FEED_STATS feedStats ON feedStats.FEED_ID = f.id
    WHERE e.END_TIME IS NULL
    UNION SELECT
    CONCAT(v.FEED_NAME, COALESCE(e.JOB_EXECUTION_ID,-99)) as ID,
    v.FEED_ID AS FEED_ID,
    v.FEED_NAME AS FEED_NAME,
    v.FEED_TYPE AS FEED_TYPE,
    v.IS_STREAM AS IS_STREAM,
    v.JOB_EXECUTION_ID AS JOB_EXECUTION_ID,
    e.JOB_INSTANCE_ID AS JOB_INSTANCE_ID,
    v.STATUS AS STATUS,
    e.EXIT_CODE AS EXIT_CODE,
    e.EXIT_MESSAGE AS EXIT_MESSAGE,
    v.START_TIME AS START_TIME,
    v.END_TIME AS END_TIME,
    summary.FAILED_COUNT AS FAILED_COUNT,
    summary.COMPLETED_COUNT AS COMPLETED_COUNT,
    summary.ABANDONED_COUNT AS ABANDONED_COUNT,
    summary.ALL_COUNT AS ALL_COUNT,
    summary.RUNNING_COUNT AS RUNNING_COUNT,
    'FINISHED' AS RUN_STATUS
    FROM LATEST_FINISHED_FEED_JOB_VW v
    JOIN BATCH_JOB_EXECUTION e ON e.JOB_EXECUTION_ID = v.JOB_EXECUTION_ID
    JOIN BATCH_FEED_SUMMARY_COUNTS_VW summary ON summary.FEED_ID = v.FEED_ID
  ]]>
    </createView>
  </changeSet>
</databaseChangeLog>