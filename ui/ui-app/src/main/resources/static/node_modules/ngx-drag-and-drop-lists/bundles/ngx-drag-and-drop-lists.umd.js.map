{
  "version": 3,
  "file": "ngx-drag-and-drop-lists.umd.js",
  "sources": [
    "ng://ngx-drag-and-drop-lists/out/module/module.ts",
    "ng://ngx-drag-and-drop-lists/out/directives/dnd-handle.ts",
    "ng://ngx-drag-and-drop-lists/out/directives/dnd-nodrag.ts",
    "ng://ngx-drag-and-drop-lists/out/directives/dnd-draggable.ts",
    "ng://ngx-drag-and-drop-lists/out/directives/dnd-list.ts",
    "ng://ngx-drag-and-drop-lists/out/services/DndState.ts",
    "ng://ngx-drag-and-drop-lists/out/services/constants.ts"
  ],
  "sourcesContent": [
    "import { NgModule } from '@angular/core';\nimport { DndDraggable, DndHandle, DndList, DndNoDrag } from '../directives';\nimport { DndState } from '../services';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n    imports: [\n        CommonModule,\n    ],\n    exports: [\n        DndDraggable, DndHandle, DndList, DndNoDrag,\n    ],\n    entryComponents: [],\n    declarations: [DndDraggable, DndHandle, DndList, DndNoDrag],\n    providers: [\n        DndState,\n    ],\n})\nexport class DndListModule {\n}\n\n",
    "import { Directive, Input, Output, ElementRef, HostListener, EventEmitter } from '@angular/core';\nimport {\n    DndState,\n    DndDraggableConfig,\n    DndStateConfig,\n} from '../services';\n@Directive({\n    selector: '[dndHandle]',\n})\n/**\n * Use the dnd-handle directive within a dnd-nodrag element in order to allow dragging with that\n * element after all. Therefore, by combining dnd-nodrag and dnd-handle you can allow\n * dnd-draggable elements to only be dragged via specific \"handle\" elements. Note that Internet\n * Explorer will show the handle element as drag image instead of the dnd-draggable element. You\n * can work around this by styling the handle element differently when it is being dragged. Use\n * the CSS selector .dndDragging:not(.dndDraggingSource) [dnd-handle] for that.\n */\nexport class DndHandle {\n    private dragState: DndStateConfig;\n    private nativeElement: HTMLElement;\n    private draggableString: string = 'draggable';\n    constructor(\n        private element: ElementRef,\n        private dndState: DndState,\n    ) {\n        this.dragState = dndState.dragState;\n        this.nativeElement = element.nativeElement;\n        this.nativeElement.setAttribute(this.draggableString, 'true');\n\n    }\n\n    @HostListener('dragstart', ['$event'])\n    public handleDragStart(event: DragEvent): void {\n        event = event['originalEvent'] || event;\n        event['_dndHandle'] = true;\n    }\n\n    @HostListener('dragend', ['$event'])\n    public handleDragEnd(event: DragEvent): void {\n        event = event['originalEvent'] || event;\n\n        if (!event['_dndHandle']) {\n            event.stopPropagation();\n        }\n    }\n}\n",
    "import { Directive, Input, Output, ElementRef, HostListener, EventEmitter } from '@angular/core';\nimport {\n    DndState,\n    DndDraggableConfig,\n    DndStateConfig,\n} from '../services';\n@Directive({\n    selector: '[dndNoDrag]',\n})\n/**\n * Use the dnd-nodrag attribute inside of dnd-draggable elements to prevent them from starting\n * drag operations. This is especially useful if you want to use input elements inside of\n * dnd-draggable elements or create specific handle elements. Note: This directive does not work\n * in Internet Explorer 9.\n */\nexport class DndNoDrag {\n    private dragState: DndStateConfig;\n    private nativeElement: HTMLElement;\n    private draggableString: string = 'draggable';\n    constructor(\n        private element: ElementRef,\n        private dndState: DndState,\n    ) {\n        this.dragState = dndState.dragState;\n        this.nativeElement = element.nativeElement;\n        this.nativeElement.setAttribute(this.draggableString, 'true');\n\n    }\n\n    @HostListener('dragstart', ['$event'])\n    public handleDragStart(event: DragEvent): void {\n        event = event['originalEvent'] || event;\n\n        if (!event['_dndHandle']) {\n            // If a child element already reacted to dragstart and set a dataTransfer object, we will\n            // allow that. For example, this is the case for user selections inside of input elements.\n            if (!(event.dataTransfer.types && event.dataTransfer.types.length)) {\n                event.preventDefault();\n            }\n            event.stopPropagation();\n        }\n    }\n\n    @HostListener('dragend', ['$event'])\n    public handleDragEnd(event: DragEvent): void {\n        event = event['originalEvent'] || event;\n\n        if (!event['_dndHandle']) {\n            event.stopPropagation();\n        }\n    }\n}\n",
    "import { Directive, Input, Output, OnDestroy, OnInit, ElementRef, HostListener, EventEmitter } from '@angular/core';\nimport { DndState } from '../services';\nimport {\n    DndDraggableConfig,\n    DndStateConfig,\n    ALL_EFFECTS,\n    MIME_TYPE,\n    EDGE_MIME_TYPE,\n    MSIE_MIME_TYPE,\n} from '../index';\nimport { dropAccepted } from './dnd-list';\nimport { Subscription } from 'rxjs/Subscription';\n@Directive({\n    selector: '[dndDraggable]',\n})\nexport class DndDraggable implements OnInit, OnDestroy {\n    @Input('dndDraggable') public option: DndDraggableConfig = <DndDraggableConfig>{ draggable: true };\n    @Input('dndType') public dndType: string;\n    @Input('dndObject') public dndObject: HTMLElement;\n    @Input('dndDragDisabled') public set disableDrag(disable: string | boolean) {\n        if (disable !== undefined) {\n            this.nativeElement.setAttribute(this.draggableString, (!disable).toString());\n        }\n    }\n    @Output('dndDragStart') public dndDragStart: EventEmitter<any> = new EventEmitter();\n    @Output('dndDragEnd') public dndDragEnd: EventEmitter<any> = new EventEmitter();\n    @Output('dndCopied') public dndCopied: EventEmitter<any> = new EventEmitter();\n    @Output('dndLinked') public dndLinked: EventEmitter<any> = new EventEmitter();\n    @Output('dndMoved') public dndMoved: EventEmitter<any> = new EventEmitter();\n    @Output('dndCanceled') public dndCanceled: EventEmitter<any> = new EventEmitter();\n    @Output('dndSelected') public dndSelected: EventEmitter<any> = new EventEmitter();\n\n    private dragState: DndStateConfig;\n    private dropSubscription: Subscription;\n    private nativeElement: HTMLElement;\n    private draggableString: string = 'draggable';\n    constructor(\n        private element: ElementRef,\n        private dndState: DndState,\n    ) {\n        this.dragState = dndState.dragState;\n        this.nativeElement = element.nativeElement;\n        this.nativeElement.setAttribute(this.draggableString, 'true');\n        /**\n         * Workaround to make element draggable in IE9\n         */\n        this.nativeElement.onselectstart = function (): void {\n            if (this.dragDrop) this.dragDrop();\n        };\n    }\n\n    public ngOnInit(): void {\n        this.dropSubscription = dropAccepted.subscribe(({ item, list }) => {\n            // event = event['originalEvent'] || event;\n            if (JSON.stringify(this.dndObject) === JSON.stringify(item)) {\n                let cb: object = { copy: 'dndCopied', link: 'dndLinked', move: 'dndMoved', none: 'dndCanceled' };\n                if (this.dragState) {\n                    (this[cb[this.dragState.effectAllowed]] as EventEmitter<any>).emit();\n                }\n                this.dndDragEnd.emit();\n            }\n        });\n    }\n\n    public ngOnDestroy(): void {\n        this.dropSubscription.unsubscribe();\n    }\n\n    @HostListener('dragstart', ['$event'])\n    public handleDragStart(event: DragEvent): void {\n\n        // disabled check\n        if (this.nativeElement.getAttribute(this.draggableString) === 'false')\n            return;\n\n        // init drag\n        this.dragState.isDragging = true;\n        this.dragState.itemType = this.dndType;\n        this.dragState.dropEffect = 'none';\n        if (!this.option) {\n            this.option = <DndDraggableConfig>{ draggable: true };\n        }\n        this.dragState.effectAllowed = this.option.effectAllowed || ALL_EFFECTS[0];\n        event.dataTransfer.effectAllowed = this.dragState.effectAllowed;\n        // Internet Explorer and Microsoft Edge don't support custom mime types, see design doc:\n        // https://github.com/marceljuenemann/angular-drag-and-drop-lists/wiki/Data-Transfer-Design\n        let mimeType: string = MIME_TYPE + (this.dragState.itemType ? ('-' + this.dragState.itemType) : '');\n        try {\n            event.dataTransfer.setData(mimeType, JSON.stringify(this.dndObject));\n        } catch (e) {\n            // Setting a custom MIME type did not work, we are probably in IE or Edge.\n            let data: string = JSON.stringify({ item: this.dndObject, type: this.dragState.itemType });\n            try {\n                event.dataTransfer.setData(EDGE_MIME_TYPE, data);\n            } catch (e) {\n                // We are in Internet Explorer and can only use the Text MIME type. Also note that IE\n                // does not allow changing the cursor in the dragover event, therefore we have to choose\n                // the one we want to display now by setting effectAllowed.\n                let effectsAllowed: string[] = this.dndState.filterEffects(ALL_EFFECTS, this.dragState.effectAllowed);\n                event.dataTransfer.effectAllowed = effectsAllowed[0];\n                event.dataTransfer.setData(MSIE_MIME_TYPE, data);\n            }\n        }\n\n        // add drag classes\n        this.nativeElement.classList.add('dndDragging');\n        setTimeout(\n            () => {\n                if (this.dragState.effectAllowed === 'move') {\n                    this.nativeElement.style.display = 'none';\n                }\n            });\n\n        // Try setting a proper drag image if triggered on a dnd-handle (won't work in IE).\n        if ((<any>event)._dndHandle && event.dataTransfer.setDragImage) {\n            event.dataTransfer.setDragImage(this.nativeElement, 0, 0);\n        }\n\n        this.dndDragStart.emit();\n        event.stopPropagation();\n    }\n\n    @HostListener('dragend', ['$event'])\n    public handleDragEnd(event: DragEvent): void {\n        // Clean up\n        this.dragState.isDragging = false;\n        this.nativeElement.classList.remove('dndDragging');\n        this.nativeElement.style.removeProperty('display');\n        event.stopPropagation();\n        // In IE9 it is possible that the timeout from dragstart triggers after the dragend handler.\n        setTimeout((() => this.nativeElement.classList.remove('dndDraggingSource')), 0);\n    }\n\n    @HostListener('click', ['$event'])\n    public handleClick(event: Event): void {\n\n        if (this.nativeElement.hasAttribute('dndSelected')) return;\n\n        event = event['originalEvent'] || event;\n\n        this.dndSelected.emit();\n\n        event.stopPropagation();\n    }\n\n    private findElementWithAttribute(element: HTMLElement, attr: string): HTMLElement {\n        if (element.hasAttribute(attr)) return element;\n        if (element.parentElement === null) return;\n        return this.findElementWithAttribute(element.parentElement, attr);\n    }\n\n}\n",
    "import { Directive, Input, OnDestroy, OnInit, Output, ElementRef, HostListener, EventEmitter } from '@angular/core';\nimport {\n    DndState,\n    DndListSettings,\n    DndStateConfig,\n    ALL_EFFECTS,\n    MIME_TYPE,\n    EDGE_MIME_TYPE,\n    MSIE_MIME_TYPE,\n} from '../services';\nimport { Subject } from 'rxjs/Subject';\n\nexport const dropAccepted: Subject<any> = new Subject();\n\n@Directive({\n    selector: '[dndList]',\n})\nexport class DndList implements OnInit, OnDestroy {\n    @Input('dndList') public option: DndListSettings = {\n        disabled: false,\n        effectAllowed: 'move',\n        allowedTypes: undefined,\n    };\n    @Input('dndModel') public dndModel: any[];\n    @Input() public set dndPlaceholder(placeholder: Element) {\n        this.placeholder = placeholder;\n        placeholder.remove();\n    }\n    @Output('dndDragOver') public dndDragOver: EventEmitter<any> = new EventEmitter();\n    @Output('dndDrop') public dndDrop: EventEmitter<any> = new EventEmitter();\n    @Output('dndInserted') public dndInserted: EventEmitter<any> = new EventEmitter();\n    private dragState: DndStateConfig;\n    private nativeElement: HTMLElement;\n    private listSettings: {} = {};\n    private placeholder: Element;\n\n    constructor(\n        private element: ElementRef,\n        private dndState: DndState,\n    ) {\n        this.dragState = dndState.dragState;\n        this.nativeElement = element.nativeElement;\n        this.placeholder = this.getPlaceholderElement();\n    }\n\n    public ngOnInit(): void {\n        // placeholder\n    }\n\n    public ngOnDestroy(): void {\n        // placeholder\n    }\n\n    @HostListener('dragenter', ['$event'])\n    public handleDragEnter(event: DragEvent): boolean {\n        event = event['originalEvent'] || event;\n        const mimeType: string = this.getMimeType(event.dataTransfer.types);\n        if (!mimeType || !this.isDropAllowed(this.getItemType(mimeType))) {\n            return true;\n        }\n\n        event.preventDefault();\n        return false;\n    }\n\n    @HostListener('dragover', ['$event'])\n    public handleDragOver(event: DragEvent): boolean {\n        event = event['originalEvent'] || event;\n        const mimeType: string = this.getMimeType(event.dataTransfer.types);\n        const itemType: string = this.getItemType(mimeType);\n        if (!mimeType || !this.isDropAllowed(itemType)) {\n            return true;\n        }\n        // Make sure the placeholder is shown, which is especially important if the list is empty.\n        if (this.placeholder.parentNode !== this.nativeElement) {\n            this.nativeElement.appendChild(this.placeholder);\n        }\n\n        if (event.target !== this.nativeElement) {\n            // Try to find the node direct directly below the list node.\n            let listItemNode: Node = event.target as Node;\n            while (listItemNode.parentNode !== this.nativeElement && listItemNode.parentNode) {\n                listItemNode = listItemNode.parentNode;\n            }\n\n            if (listItemNode.parentNode === this.nativeElement && listItemNode !== this.placeholder) {\n                let isFirstHalf: boolean;\n                // If the mouse pointer is in the upper half of the list item element,\n                // we position the placeholder before the list item, otherwise after it.\n                const rect: ClientRect = (listItemNode as Element).getBoundingClientRect();\n                if (this.option && this.option.horizontal) {\n                    isFirstHalf = event.clientX < rect.left + rect.width / 2;\n                } else {\n                    isFirstHalf = event.clientY < rect.top + rect.height / 2;\n                }\n                this.nativeElement.insertBefore(\n                    this.placeholder,\n                    isFirstHalf ? listItemNode : listItemNode.nextSibling);\n            }\n        }\n\n        // In IE we set a fake effectAllowed in dragstart to get the correct cursor, we therefore\n        // ignore the effectAllowed passed in dataTransfer. We must also not access dataTransfer for\n        // drops from external sources, as that throws an exception.\n        let ignoreDataTransfer: boolean = mimeType === MSIE_MIME_TYPE;\n        let dropEffect: string = this.getDropEffect(event, ignoreDataTransfer);\n        if (dropEffect === 'none') return this.stopDragOver();\n\n        // At this point we invoke the callback, which still can disallow the drop.\n        // We can't do this earlier because we want to pass the index of the placeholder.\n        // if (this.dndDragOver &&\n        //     !this.invokeCallback(this.dndDragOver, event, dropEffect, itemType)) {\n        //     return this.stopDragOver();\n        // }\n\n        event.preventDefault();\n        if (!ignoreDataTransfer) {\n            event.dataTransfer.dropEffect = dropEffect;\n        }\n\n        this.nativeElement.classList.add('dndDragover');\n        event.stopPropagation();\n        return false;\n    }\n\n    @HostListener('drop', ['$event'])\n    public handleDrop(event: DragEvent): boolean {\n        event = event['originalEvent'] || event;\n\n        // Check whether the drop is allowed and determine mime type.\n        let mimeType: string = this.getMimeType(event.dataTransfer.types);\n        let itemType: string = this.getItemType(mimeType);\n        if (!mimeType || !this.isDropAllowed(itemType)) return true;\n\n        // The default behavior in Firefox is to interpret the dropped element as URL and\n        // forward to it. We want to prevent that even if our drop is aborted.\n        event.preventDefault();\n\n        let data: any = undefined;\n        // Unserialize the data that was serialized in dragstart.\n        try {\n            data = JSON.parse(event.dataTransfer.getData(mimeType));\n        } catch (e) {\n            return this.stopDragOver();\n        }\n\n        // Drops with invalid types from external sources might not have been filtered out yet.\n        if (mimeType === MSIE_MIME_TYPE || mimeType === EDGE_MIME_TYPE) {\n            itemType = data.type || undefined;\n            data = data.item;\n            if (!this.isDropAllowed(itemType)) return this.stopDragOver();\n        }\n\n        // Special handling for internal IE drops, see dragover handler.\n        let ignoreDataTransfer: boolean = mimeType === MSIE_MIME_TYPE;\n        let dropEffect: string = this.getDropEffect(event, ignoreDataTransfer);\n        if (dropEffect === 'none') return this.stopDragOver();\n\n        // Invoke the callback, which can transform the transferredObject and even abort the drop.\n        let index: number = this.getPlaceholderIndex();\n        // create an offset to account for extra elements (including the placeholder element)\n        let offset: number = this.nativeElement.children.length - 1 - this.dndModel.length;\n        if (this.dndDrop) {\n            this.invokeCallback(this.dndDrop, event, dropEffect, itemType, index, data);\n            if (!data) return this.stopDragOver();\n        }\n\n        // The drop is definitely going to happen now, store the dropEffect.\n        this.dragState.dropEffect = dropEffect;\n        if (!ignoreDataTransfer) {\n            event.dataTransfer.dropEffect = dropEffect;\n        }\n\n        // Insert the object into the array, unless dnd-drop took care of that (returned true).\n        if (data !== true) {\n            // use the offset to create an insertionPoint\n            let insertionPoint: number = index - offset;\n            if (insertionPoint < 0) {\n                insertionPoint = 0;\n            }\n            this.dndModel.splice(insertionPoint, 0, data);\n        }\n        this.invokeCallback(this.dndInserted, event, dropEffect, itemType, index, data);\n\n        // Tell old object to handle itself\n        dropAccepted.next({ item: data, list: this.dndModel });\n\n        // Clean up\n        this.stopDragOver();\n        event.stopPropagation();\n        return false;\n    }\n\n    @HostListener('dragleave', ['$event'])\n    public handleDragLeave(event: DragEvent): void {\n        event = event['originalEvent'] || event;\n\n        let newTarget: Element = document.elementFromPoint(event.clientX, event.clientY);\n        if (this.nativeElement.contains(newTarget) && !event['_dndPhShown']) {\n            // Signalize to potential parent lists that a placeholder is already shown.\n            event['_dndPhShown'] = true;\n        } else {\n            this.stopDragOver();\n        }\n    }\n\n    private getPlaceholderElement(): Element {\n        let placeholder: Element = undefined;\n        if (this.nativeElement.children) {\n            for (let i: number = 1; i < this.nativeElement.children.length; i++) {\n                let child: Element = this.nativeElement.children.item(i);\n                if (child.classList.contains('dndPlaceholder')) {\n                    placeholder = child;\n                }\n            }\n        }\n        let placeholderDefault: Element = document.createElement('li');\n        placeholderDefault.classList.add('dndPlaceholder');\n        return placeholder || placeholderDefault;\n    }\n\n    /**\n     * Given the types array from the DataTransfer object, returns the first valid mime type.\n     * A type is valid if it starts with MIME_TYPE, or it equals MSIE_MIME_TYPE or EDGE_MIME_TYPE.\n     */\n    private getMimeType(types: string[]): string {\n        if (!types) return MSIE_MIME_TYPE; // IE 9 workaround.\n        for (let i: number = 0; i < types.length; i++) {\n            if (types[i] === MSIE_MIME_TYPE || types[i] === EDGE_MIME_TYPE ||\n                types[i].substr(0, MIME_TYPE.length) === MIME_TYPE) {\n                return types[i];\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Determines the type of the item from the dndState, or from the mime type for items from\n     * external sources. Returns undefined if no item type was set and null if the item type could\n     * not be determined.\n     */\n    private getItemType(mimeType: string): string {\n        if (this.dragState.isDragging) return this.dragState.itemType || undefined;\n        if (mimeType === MSIE_MIME_TYPE || mimeType === EDGE_MIME_TYPE) return null;\n        return (mimeType && mimeType.substr(MIME_TYPE.length + 1)) || undefined;\n    }\n\n    /**\n     * Checks various conditions that must be fulfilled for a drop to be allowed, including the\n     * dnd-allowed-types attribute. If the item Type is unknown (null), the drop will be allowed.\n     */\n    private isDropAllowed(itemType: string): boolean {\n        if (this.option) {\n            if (this.option.disabled) return false;\n            if (this.option.max && this.dndModel.length === this.option.max) return false;\n            if (!this.option.externalSources && !this.dragState.isDragging) return false;\n            if (!this.option.allowedTypes || itemType === null) return true;\n        }\n        return itemType && this.option.allowedTypes.indexOf(itemType) !== -1;\n    }\n\n    /**\n     * Determines which drop effect to use for the given event. In Internet Explorer we have to\n     * ignore the effectAllowed field on dataTransfer, since we set a fake value in dragstart.\n     * In those cases we rely on dndState to filter effects. Read the design doc for more details:\n     * https://github.com/marceljuenemann/angular-drag-and-drop-lists/wiki/Data-Transfer-Design\n     */\n    private getDropEffect(event: DragEvent, ignoreDataTransfer: boolean): string {\n        let effects: string[] = Object.assign([], ALL_EFFECTS);\n        if (!ignoreDataTransfer) {\n            effects = this.dndState.filterEffects(effects, event.dataTransfer.effectAllowed);\n        }\n        if (this.dragState.isDragging) {\n            effects = this.dndState.filterEffects(effects, this.dragState.effectAllowed);\n        }\n        if (this.option && this.option.effectAllowed) {\n            effects = this.dndState.filterEffects(effects, this.option.effectAllowed);\n        }\n        // MacOS automatically filters dataTransfer.effectAllowed depending on the modifier keys,\n        // therefore the following modifier keys will only affect other operating systems.\n        if (!effects.length) {\n            return 'none';\n        } else if (event.ctrlKey && effects.indexOf('copy') !== -1) {\n            return 'copy';\n        } else if (event.altKey && effects.indexOf('link') !== -1) {\n            return 'link';\n        } else {\n            return effects[0];\n        }\n    }\n\n    /**\n     * Small helper function that cleans up if we aborted a drop.\n     */\n    private stopDragOver(): boolean {\n        this.placeholder.remove();\n        this.nativeElement.classList.remove('dndDragover');\n        return true;\n    }\n\n    /**\n     * Invokes a callback with some interesting parameters and returns the callbacks return value.\n     */\n    private invokeCallback(\n        eventEmitter: EventEmitter<any>,\n        event: DragEvent, dropEffect: string,\n        itemType: string, index?: number, item?: any): boolean {\n        eventEmitter.emit({\n            dropEffect: dropEffect,\n            event: event,\n            external: !this.dragState.isDragging,\n            index: index !== undefined ? index : this.getPlaceholderIndex(),\n            item: item || undefined,\n            type: itemType,\n        });\n        return true;\n    }\n    /**\n     * We use the position of the placeholder node to determine at which position of the array the\n     * object needs to be inserted\n     */\n    private getPlaceholderIndex(): number {\n        // Remove the dragging element to get the correct index of the placeholder;\n        for (let i: number = 0; i < this.nativeElement.children.length; i++) {\n            if (this.nativeElement.children[i].classList.contains('dndDragging')) {\n                this.nativeElement.children[i].remove();\n                break;\n            }\n        }\n        return Array.prototype.indexOf.call(this.nativeElement.children, this.placeholder);\n    }\n}\n",
    "import { Injectable } from '@angular/core';\nimport { ALL_EFFECTS, DndStateConfig } from '../index';\n@Injectable()\nexport class DndState {\n    public dragState: DndStateConfig = {\n        isDragging: false,\n        itemType: undefined,\n        dropEffect: 'none',\n        effectAllowed: ALL_EFFECTS[0],\n    };\n\n    /**\n     * Filters an array of drop effects using a HTML5 effectAllowed string.\n     */\n    public filterEffects(effects: string[], effectAllowed: string) {\n        if (effectAllowed === 'all') return effects;\n        return effects.filter((effect) => {\n            return effectAllowed.toLowerCase().indexOf(effect) !== -1;\n        });\n    }\n}\n",
    "// In standard-compliant browsers we use a custom mime type and also encode the dnd-type in it.\n// However, IE and Edge only support a limited number of mime types. The workarounds are described\n// in https://github.com/marceljuenemann/angular-drag-and-drop-lists/wiki/Data-Transfer-Design\nexport const MIME_TYPE: string = 'application/x-dnd';\nexport const EDGE_MIME_TYPE: string = 'application/json';\nexport const MSIE_MIME_TYPE: string = 'Text';\n\n// All valid HTML5 drop effects, in the order in which we prefer to use them.\nexport const ALL_EFFECTS: Effects[] = ['move', 'copy', 'link'];\n\nexport type Effects = 'move' | 'copy' | 'link';\n"
  ],
  "names": [
    "CommonModule",
    "NgModule",
    "HostListener",
    "ElementRef",
    "Directive",
    "Output",
    "Input",
    "EventEmitter",
    "Subject",
    "Injectable"
  ],
  "mappings": ";;;;;;AMGA,IAAa,SAAS,GAAW,mBAAmB,CAAC;AACrD,IAAa,cAAc,GAAW,kBAAkB,CAAC;AACzD,IAAa,cAAc,GAAW,MAAM,CAAC;AAG7C,IAAa,WAAW,GAAc,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAA9D;ADRA,IAAA,QAAA,kBAAA,YAAA;;QAIA,IAAA,CAAA,SAAA,GAAuC;YAC/B,UAAU,EAAE,KAAK;YACjB,QAAQ,EAAE,SAAS;YACnB,UAAU,EAAE,MAAM;YAClB,aAAa,EAAE,WAAW,CAAC,CAAC,CAAC;SAChC,CAAL;;IAKW,QAAX,CAAA,SAAA,CAAA,aAAwB,GAAb,UAAc,OAAiB,EAAE,aAAqB,EAAjE;QACQ,IAAI,aAAa,KAAK,KAAK;YAAE,OAAO,OAAO,CAAC;QAC5C,OAAO,OAAO,CAAC,MAAM,CAAC,UAAC,MAAM,EAArC;YACY,OAAO,aAAa,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;SAC7D,CAAC,CAAC;;;;;IAhBX,EAAA,IAAA,EAACS,eAAU,EAAX;;ADFA,IAYa,YAAY,GAAiB,IAAID,eAAO,EAAE,CAAC;AAKxD,IAAA,OAAA,kBAAA,YAAA;IAmBI,SAAJ,OAAA,CACgB,OADhB,EAEgB,QAFhB,EAAA;QACgB,IAAhB,CAAA,OAAuB,GAAP,OAAO,CAAvB;QACgB,IAAhB,CAAA,QAAwB,GAAR,QAAQ,CAAxB;QApBA,IAAA,CAAA,MAAA,GAAuD;YAC/C,QAAQ,EAAE,KAAK;YACf,aAAa,EAAE,MAAM;YACrB,YAAY,EAAE,SAAS;SAC1B,CAAL;QAMA,IAAA,CAAA,WAAA,GAAmE,IAAID,iBAAY,EAAE,CAArF;QACA,IAAA,CAAA,OAAA,GAA2D,IAAIA,iBAAY,EAAE,CAA7E;QACA,IAAA,CAAA,WAAA,GAAmE,IAAIA,iBAAY,EAAE,CAArF;QAGA,IAAA,CAAA,YAAA,GAA+B,EAAE,CAAjC;QAOQ,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;QACpC,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,aAAa,CAAC;QAC3C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;KACnD;IAnBL,MAAA,CAAA,cAAA,CAAwB,OAAxB,CAAA,SAAA,EAAA,gBAAsC,EAAtC;QAAA,GAAA,EAAA,UAAuC,WAAoB,EAA3D;YACQ,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YAC/B,WAAW,CAAC,MAAM,EAAE,CAAC;;;;;IAmBlB,OAAX,CAAA,SAAA,CAAA,QAAmB,GAAR,YAAX;;IAIW,OAAX,CAAA,SAAA,CAAA,WAAsB,GAAX,YAAX;;IAKW,OAAX,CAAA,SAAA,CAAA,eAA0B,GAAf,UAAgB,KAAgB,EAA3C;QACQ,KAAK,GAAG,KAAK,CAAC,eAAe,CAAC,IAAI,KAAK,CAAC;QACxC,IAAM,QAAQ,GAAW,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QACpE,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,EAAE;YAC9D,OAAO,IAAI,CAAC;SACf;QAED,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,OAAO,KAAK,CAAC;;IAIV,OAAX,CAAA,SAAA,CAAA,cAAyB,GAAd,UAAe,KAAgB,EAA1C;QACQ,KAAK,GAAG,KAAK,CAAC,eAAe,CAAC,IAAI,KAAK,CAAC;QACxC,IAAM,QAAQ,GAAW,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QACpE,IAAM,QAAQ,GAAW,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QACpD,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE;YAC5C,OAAO,IAAI,CAAC;SACf;QAED,IAAI,IAAI,CAAC,WAAW,CAAC,UAAU,KAAK,IAAI,CAAC,aAAa,EAAE;YACpD,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACpD;QAED,IAAI,KAAK,CAAC,MAAM,KAAK,IAAI,CAAC,aAAa,EAAE;YAErC,IAAI,YAAY,IAAS,KAAK,CAAC,MAAc,CAAA,CAAC;YAC9C,OAAO,YAAY,CAAC,UAAU,KAAK,IAAI,CAAC,aAAa,IAAI,YAAY,CAAC,UAAU,EAAE;gBAC9E,YAAY,GAAG,YAAY,CAAC,UAAU,CAAC;aAC1C;YAED,IAAI,YAAY,CAAC,UAAU,KAAK,IAAI,CAAC,aAAa,IAAI,YAAY,KAAK,IAAI,CAAC,WAAW,EAAE;gBACrF,IAAI,WAAoB,GAAxC,KAAA,CAAwC,CAAC;gBAGzB,IAAM,IAAI,GAAe,EAAC,YAAuB,GAAE,qBAAqB,EAAE,CAAC;gBAC3E,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;oBACvC,WAAW,GAAG,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;iBAC5D;qBAAM;oBACH,WAAW,GAAG,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;iBAC5D;gBACD,IAAI,CAAC,aAAa,CAAC,YAAY,CAC3B,IAAI,CAAC,WAAW,EAChB,WAAW,GAAG,YAAY,GAAG,YAAY,CAAC,WAAW,CAAC,CAAC;aAC9D;SACJ;QAKD,IAAI,kBAAkB,GAAY,QAAQ,KAAK,cAAc,CAAC;QAC9D,IAAI,UAAU,GAAW,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,kBAAkB,CAAC,CAAC;QACvE,IAAI,UAAU,KAAK,MAAM;YAAE,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC;QAStD,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,IAAI,CAAC,kBAAkB,EAAE;YACrB,KAAK,CAAC,YAAY,CAAC,UAAU,GAAG,UAAU,CAAC;SAC9C;QAED,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAChD,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,OAAO,KAAK,CAAC;;IAIV,OAAX,CAAA,SAAA,CAAA,UAAqB,GAAV,UAAW,KAAgB,EAAtC;QACQ,KAAK,GAAG,KAAK,CAAC,eAAe,CAAC,IAAI,KAAK,CAAC;QAGxC,IAAI,QAAQ,GAAW,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAClE,IAAI,QAAQ,GAAW,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAClD,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;YAAE,OAAO,IAAI,CAAC;QAI5D,KAAK,CAAC,cAAc,EAAE,CAAC;QAEvB,IAAI,IAAI,GAAQ,SAAS,CAAC;QAE1B,IAAI;YACA,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;SAC3D;QAAC,OAAO,CAAC,EAAE;YACR,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC;SAC9B;QAGD,IAAI,QAAQ,KAAK,cAAc,IAAI,QAAQ,KAAK,cAAc,EAAE;YAC5D,QAAQ,GAAG,IAAI,CAAC,IAAI,IAAI,SAAS,CAAC;YAClC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACjB,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;gBAAE,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC;SACjE;QAGD,IAAI,kBAAkB,GAAY,QAAQ,KAAK,cAAc,CAAC;QAC9D,IAAI,UAAU,GAAW,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,kBAAkB,CAAC,CAAC;QACvE,IAAI,UAAU,KAAK,MAAM;YAAE,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC;QAGtD,IAAI,KAAK,GAAW,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAE/C,IAAI,MAAM,GAAW,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;QACnF,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;YAC5E,IAAI,CAAC,IAAI;gBAAE,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC;SACzC;QAGD,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,CAAC;QACvC,IAAI,CAAC,kBAAkB,EAAE;YACrB,KAAK,CAAC,YAAY,CAAC,UAAU,GAAG,UAAU,CAAC;SAC9C;QAGD,IAAI,IAAI,KAAK,IAAI,EAAE;YAEf,IAAI,cAAc,GAAW,KAAK,GAAG,MAAM,CAAC;YAC5C,IAAI,cAAc,GAAG,CAAC,EAAE;gBACpB,cAAc,GAAG,CAAC,CAAC;aACtB;YACD,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;SACjD;QACD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QAGhF,YAAY,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;QAGvD,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,OAAO,KAAK,CAAC;;IAIV,OAAX,CAAA,SAAA,CAAA,eAA0B,GAAf,UAAgB,KAAgB,EAA3C;QACQ,KAAK,GAAG,KAAK,CAAC,eAAe,CAAC,IAAI,KAAK,CAAC;QAExC,IAAI,SAAS,GAAY,QAAQ,CAAC,gBAAgB,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;QACjF,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE;YAEjE,KAAK,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC;SAC/B;aAAM;YACH,IAAI,CAAC,YAAY,EAAE,CAAC;SACvB;;IAGG,OAAZ,CAAA,SAAA,CAAA,qBAAiC,GAArB,YAAZ;QACQ,IAAI,WAAW,GAAY,SAAS,CAAC;QACrC,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;YAC7B,KAAK,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACjE,IAAI,KAAK,GAAY,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACzD,IAAI,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,gBAAgB,CAAC,EAAE;oBAC5C,WAAW,GAAG,KAAK,CAAC;iBACvB;aACJ;SACJ;QACD,IAAI,kBAAkB,GAAY,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAC/D,kBAAkB,CAAC,SAAS,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QACnD,OAAO,WAAW,IAAI,kBAAkB,CAAC;;IAOrC,OAAZ,CAAA,SAAA,CAAA,WAAuB,GAAX,UAAY,KAAe,EAAvC;QACQ,IAAI,CAAC,KAAK;YAAE,OAAO,cAAc,CAAC;QAClC,KAAK,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC3C,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,cAAc,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,cAAc;gBAC1D,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,SAAS,CAAC,MAAM,CAAC,KAAK,SAAS,EAAE;gBACpD,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;aACnB;SACJ;QACD,OAAO,IAAI,CAAC;;IAQR,OAAZ,CAAA,SAAA,CAAA,WAAuB,GAAX,UAAY,QAAgB,EAAxC;QACQ,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU;YAAE,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,IAAI,SAAS,CAAC;QAC3E,IAAI,QAAQ,KAAK,cAAc,IAAI,QAAQ,KAAK,cAAc;YAAE,OAAO,IAAI,CAAC;QAC5E,OAAO,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,SAAS,CAAC;;IAOpE,OAAZ,CAAA,SAAA,CAAA,aAAyB,GAAb,UAAc,QAAgB,EAA1C;QACQ,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ;gBAAE,OAAO,KAAK,CAAC;YACvC,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,CAAC,GAAG;gBAAE,OAAO,KAAK,CAAC;YAC9E,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU;gBAAE,OAAO,KAAK,CAAC;YAC7E,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,IAAI,QAAQ,KAAK,IAAI;gBAAE,OAAO,IAAI,CAAC;SACnE;QACD,OAAO,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;IASjE,OAAZ,CAAA,SAAA,CAAA,aAAyB,GAAb,UAAc,KAAgB,EAAE,kBAA2B,EAAvE;QACQ,IAAI,OAAO,GAAa,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC;QACvD,IAAI,CAAC,kBAAkB,EAAE;YACrB,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,EAAE,KAAK,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;SACpF;QACD,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE;YAC3B,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;SAChF;QACD,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE;YAC1C,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;SAC7E;QAGD,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;YACjB,OAAO,MAAM,CAAC;SACjB;aAAM,IAAI,KAAK,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;YACxD,OAAO,MAAM,CAAC;SACjB;aAAM,IAAI,KAAK,CAAC,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;YACvD,OAAO,MAAM,CAAC;SACjB;aAAM;YACH,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC;SACrB;;IAMG,OAAZ,CAAA,SAAA,CAAA,YAAwB,GAAZ,YAAZ;QACQ,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QACnD,OAAO,IAAI,CAAC;;IAMR,OAAZ,CAAA,SAAA,CAAA,cAA0B,GAAd,UACJ,YAA+B,EAC/B,KAAgB,EAAE,UAAkB,EACpC,QAAgB,EAAE,KAAc,EAAE,IAAU,EAHpD;QAIQ,YAAY,CAAC,IAAI,CAAC;YACd,UAAU,EAAE,UAAU;YACtB,KAAK,EAAE,KAAK;YACZ,QAAQ,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU;YACpC,KAAK,EAAE,KAAK,KAAK,SAAS,GAAG,KAAK,GAAG,IAAI,CAAC,mBAAmB,EAAE;YAC/D,IAAI,EAAE,IAAI,IAAI,SAAS;YACvB,IAAI,EAAE,QAAQ;SACjB,CAAC,CAAC;QACH,OAAO,IAAI,CAAC;;IAMR,OAAZ,CAAA,SAAA,CAAA,mBAA+B,GAAnB,YAAZ;QAEQ,KAAK,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACjE,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE;gBAClE,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;gBACxC,MAAM;aACT;SACJ;QACD,OAAO,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;;;;;IA3T3F,EAAA,IAAA,EAACH,cAAS,EAAV,IAAA,EAAA,CAAW;gBACP,QAAQ,EAAE,WAAW;aACxB,EAAD,EAAA;;;IAhBA,EAAA,IAAA,EAAsDD,eAAU,GAAhE;IAEA,EAAA,IAAA,EAAI,QAAQ,GAAZ;;;IAgBA,QAAA,EAAA,CAAA,EAAA,IAAA,EAAKG,UAAK,EAAV,IAAA,EAAA,CAAW,SAAS,EAApB,EAAA,EAAA;IAKA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAKA,UAAK,EAAV,IAAA,EAAA,CAAW,UAAU,EAArB,EAAA,EAAA;IACA,gBAAA,EAAA,CAAA,EAAA,IAAA,EAAKA,UAAK,EAAV,EAAA;IAIA,aAAA,EAAA,CAAA,EAAA,IAAA,EAAKD,WAAM,EAAX,IAAA,EAAA,CAAY,aAAa,EAAzB,EAAA,EAAA;IACA,SAAA,EAAA,CAAA,EAAA,IAAA,EAAKA,WAAM,EAAX,IAAA,EAAA,CAAY,SAAS,EAArB,EAAA,EAAA;IACA,aAAA,EAAA,CAAA,EAAA,IAAA,EAAKA,WAAM,EAAX,IAAA,EAAA,CAAY,aAAa,EAAzB,EAAA,EAAA;IAuBA,iBAAA,EAAA,CAAA,EAAA,IAAA,EAAKH,iBAAY,EAAjB,IAAA,EAAA,CAAkB,WAAW,EAAE,CAAC,QAAQ,CAAC,EAAzC,EAAA,EAAA;IAYA,gBAAA,EAAA,CAAA,EAAA,IAAA,EAAKA,iBAAY,EAAjB,IAAA,EAAA,CAAkB,UAAU,EAAE,CAAC,QAAQ,CAAC,EAAxC,EAAA,EAAA;IA4DA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAKA,iBAAY,EAAjB,IAAA,EAAA,CAAkB,MAAM,EAAE,CAAC,QAAQ,CAAC,EAApC,EAAA,EAAA;IAoEA,iBAAA,EAAA,CAAA,EAAA,IAAA,EAAKA,iBAAY,EAAjB,IAAA,EAAA,CAAkB,WAAW,EAAE,CAAC,QAAQ,CAAC,EAAzC,EAAA,EAAA;;ADjMA,IAAA,YAAA,kBAAA,YAAA;IAoCI,SAAJ,YAAA,CACgB,OADhB,EAEgB,QAFhB,EAAA;QACgB,IAAhB,CAAA,OAAuB,GAAP,OAAO,CAAvB;QACgB,IAAhB,CAAA,QAAwB,GAAR,QAAQ,CAAxB;QAtBA,IAAA,CAAA,MAAA,IAAmF,EAAE,SAAS,EAAE,IAAI,EAAE,CAAtG,CAAA;QAQA,IAAA,CAAA,YAAA,GAAqE,IAAIK,iBAAY,EAAE,CAAvF;QACA,IAAA,CAAA,UAAA,GAAiE,IAAIA,iBAAY,EAAE,CAAnF;QACA,IAAA,CAAA,SAAA,GAA+D,IAAIA,iBAAY,EAAE,CAAjF;QACA,IAAA,CAAA,SAAA,GAA+D,IAAIA,iBAAY,EAAE,CAAjF;QACA,IAAA,CAAA,QAAA,GAA6D,IAAIA,iBAAY,EAAE,CAA/E;QACA,IAAA,CAAA,WAAA,GAAmE,IAAIA,iBAAY,EAAE,CAArF;QACA,IAAA,CAAA,WAAA,GAAmE,IAAIA,iBAAY,EAAE,CAArF;QAKA,IAAA,CAAA,eAAA,GAAsC,WAAW,CAAjD;QAKQ,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;QACpC,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,aAAa,CAAC;QAC3C,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;QAI9D,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,YAA3C;YACY,IAAI,IAAI,CAAC,QAAQ;gBAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;SACtC,CAAC;KACL;IA9BL,MAAA,CAAA,cAAA,CAAyC,YAAzC,CAAA,SAAA,EAAA,aAAoD,EAApD;QAAA,GAAA,EAAA,UAAqD,OAAyB,EAA9E;YACQ,IAAI,OAAO,KAAK,SAAS,EAAE;gBACvB,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC,OAAO,EAAE,QAAQ,EAAE,CAAC,CAAC;aAChF;;;;;IA6BE,YAAX,CAAA,SAAA,CAAA,QAAmB,GAAR,YAAX;QAAW,IAAX,KAAA,GAAA,IAAA,CAAA;QACQ,IAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC,SAAS,CAAC,UAAC,EAAc,EAAtE;YAAA,IAA0D,IAA1D,GAAA,EAAA,CAAA,IAA8D,EAAE,IAAhE,GAAA,EAAA,CAAA,IAAoE,CAApE;YAEY,IAAI,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,SAAS,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBACzD,IAAI,EAAE,GAAW,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,aAAa,EAAE,CAAC;gBACjG,IAAI,KAAI,CAAC,SAAS,EAAE;oBAChB,EAAC,KAAI,CAAC,EAAE,CAAC,KAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAsB,GAAE,IAAI,EAAE,CAAC;iBACxE;gBACD,KAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;aAC1B;SACJ,CAAC,CAAC;;IAGA,YAAX,CAAA,SAAA,CAAA,WAAsB,GAAX,YAAX;QACQ,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;;IAIjC,YAAX,CAAA,SAAA,CAAA,eAA0B,GAAf,UAAgB,KAAgB,EAA3C;QAAW,IAAX,KAAA,GAAA,IAAA,CAAA;QAGQ,IAAI,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,OAAO;YACjE,OAAO;QAGX,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,IAAI,CAAC;QACjC,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC;QACvC,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,MAAM,CAAC;QACnC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACd,IAAI,CAAC,MAAM,IAAuB,EAAE,SAAS,EAAE,IAAI,EAAE,CAAA,CAAC;SACzD;QACD,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC;QAC3E,KAAK,CAAC,YAAY,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC;QAGhE,IAAI,QAAQ,GAAW,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC;QACpG,IAAI;YACA,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;SACxE;QAAC,OAAO,CAAC,EAAE;YAER,IAAI,IAAI,GAAW,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC3F,IAAI;gBACA,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;aACpD;YAAC,OAAO,CAAC,EAAE;gBAIR,IAAI,cAAc,GAAa,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;gBACtG,KAAK,CAAC,YAAY,CAAC,aAAa,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;gBACrD,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;aACpD;SACJ;QAGD,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAChD,UAAU,CACN,YADZ;YAEgB,IAAI,KAAI,CAAC,SAAS,CAAC,aAAa,KAAK,MAAM,EAAE;gBACzC,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;aAC7C;SACJ,CAAC,CAAC;QAGP,IAAI,EAAM,KAAK,GAAE,UAAU,IAAI,KAAK,CAAC,YAAY,CAAC,YAAY,EAAE;YAC5D,KAAK,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAC7D;QAED,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;QACzB,KAAK,CAAC,eAAe,EAAE,CAAC;;IAIrB,YAAX,CAAA,SAAA,CAAA,aAAwB,GAAb,UAAc,KAAgB,EAAzC;QAAW,IAAX,KAAA,GAAA,IAAA,CAAA;QAEQ,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,KAAK,CAAC;QAClC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QACnD,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;QACnD,KAAK,CAAC,eAAe,EAAE,CAAC;QAExB,UAAU,EAAE,YAApB,EAA0B,OAAA,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAlF,EAAkF,GAAG,CAAC,CAAC,CAAC;;IAI7E,YAAX,CAAA,SAAA,CAAA,WAAsB,GAAX,UAAY,KAAY,EAAnC;QAEQ,IAAI,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,aAAa,CAAC;YAAE,OAAO;QAE3D,KAAK,GAAG,KAAK,CAAC,eAAe,CAAC,IAAI,KAAK,CAAC;QAExC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;QAExB,KAAK,CAAC,eAAe,EAAE,CAAC;;IAGpB,YAAZ,CAAA,SAAA,CAAA,wBAAoC,GAAxB,UAAyB,OAAoB,EAAE,IAAY,EAAvE;QACQ,IAAI,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC;YAAE,OAAO,OAAO,CAAC;QAC/C,IAAI,OAAO,CAAC,aAAa,KAAK,IAAI;YAAE,OAAO;QAC3C,OAAO,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;;;;;IAxI1E,EAAA,IAAA,EAACH,cAAS,EAAV,IAAA,EAAA,CAAW;gBACP,QAAQ,EAAE,gBAAgB;aAC7B,EAAD,EAAA;;;IAdA,EAAA,IAAA,EAAsDD,eAAU,GAAhE;IACA,EAAA,IAAA,EAAS,QAAQ,GAAjB;;;IAeA,QAAA,EAAA,CAAA,EAAA,IAAA,EAAKG,UAAK,EAAV,IAAA,EAAA,CAAW,cAAc,EAAzB,EAAA,EAAA;IACA,SAAA,EAAA,CAAA,EAAA,IAAA,EAAKA,UAAK,EAAV,IAAA,EAAA,CAAW,SAAS,EAApB,EAAA,EAAA;IACA,WAAA,EAAA,CAAA,EAAA,IAAA,EAAKA,UAAK,EAAV,IAAA,EAAA,CAAW,WAAW,EAAtB,EAAA,EAAA;IACA,aAAA,EAAA,CAAA,EAAA,IAAA,EAAKA,UAAK,EAAV,IAAA,EAAA,CAAW,iBAAiB,EAA5B,EAAA,EAAA;IAKA,cAAA,EAAA,CAAA,EAAA,IAAA,EAAKD,WAAM,EAAX,IAAA,EAAA,CAAY,cAAc,EAA1B,EAAA,EAAA;IACA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAKA,WAAM,EAAX,IAAA,EAAA,CAAY,YAAY,EAAxB,EAAA,EAAA;IACA,WAAA,EAAA,CAAA,EAAA,IAAA,EAAKA,WAAM,EAAX,IAAA,EAAA,CAAY,WAAW,EAAvB,EAAA,EAAA;IACA,WAAA,EAAA,CAAA,EAAA,IAAA,EAAKA,WAAM,EAAX,IAAA,EAAA,CAAY,WAAW,EAAvB,EAAA,EAAA;IACA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAKA,WAAM,EAAX,IAAA,EAAA,CAAY,UAAU,EAAtB,EAAA,EAAA;IACA,aAAA,EAAA,CAAA,EAAA,IAAA,EAAKA,WAAM,EAAX,IAAA,EAAA,CAAY,aAAa,EAAzB,EAAA,EAAA;IACA,aAAA,EAAA,CAAA,EAAA,IAAA,EAAKA,WAAM,EAAX,IAAA,EAAA,CAAY,aAAa,EAAzB,EAAA,EAAA;IAsCA,iBAAA,EAAA,CAAA,EAAA,IAAA,EAAKH,iBAAY,EAAjB,IAAA,EAAA,CAAkB,WAAW,EAAE,CAAC,QAAQ,CAAC,EAAzC,EAAA,EAAA;IAsDA,eAAA,EAAA,CAAA,EAAA,IAAA,EAAKA,iBAAY,EAAjB,IAAA,EAAA,CAAkB,SAAS,EAAE,CAAC,QAAQ,CAAC,EAAvC,EAAA,EAAA;IAWA,aAAA,EAAA,CAAA,EAAA,IAAA,EAAKA,iBAAY,EAAjB,IAAA,EAAA,CAAkB,OAAO,EAAE,CAAC,QAAQ,CAAC,EAArC,EAAA,EAAA;;ADtHA,IAAA,SAAA,kBAAA,YAAA;IAII,SAAJ,SAAA,CACgB,OADhB,EAEgB,QAFhB,EAAA;QACgB,IAAhB,CAAA,OAAuB,GAAP,OAAO,CAAvB;QACgB,IAAhB,CAAA,QAAwB,GAAR,QAAQ,CAAxB;QAHA,IAAA,CAAA,eAAA,GAAsC,WAAW,CAAjD;QAKQ,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;QACpC,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,aAAa,CAAC;QAC3C,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;KAEjE;IAGM,SAAX,CAAA,SAAA,CAAA,eAA0B,GAAf,UAAgB,KAAgB,EAA3C;QACQ,KAAK,GAAG,KAAK,CAAC,eAAe,CAAC,IAAI,KAAK,CAAC;QAExC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE;YAGtB,IAAI,EAAE,KAAK,CAAC,YAAY,CAAC,KAAK,IAAI,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;gBAChE,KAAK,CAAC,cAAc,EAAE,CAAC;aAC1B;YACD,KAAK,CAAC,eAAe,EAAE,CAAC;SAC3B;;IAIE,SAAX,CAAA,SAAA,CAAA,aAAwB,GAAb,UAAc,KAAgB,EAAzC;QACQ,KAAK,GAAG,KAAK,CAAC,eAAe,CAAC,IAAI,KAAK,CAAC;QAExC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE;YACtB,KAAK,CAAC,eAAe,EAAE,CAAC;SAC3B;;;;;IA3CT,EAAA,IAAA,EAACE,cAAS,EAAV,IAAA,EAAA,CAAW;gBACP,QAAQ,EAAE,aAAa;aAC1B,EAAD,EAAA;;;IARA,EAAA,IAAA,EAAmCD,eAAU,GAA7C;IAEA,EAAA,IAAA,EAAI,QAAQ,GAAZ;;;IA2BA,iBAAA,EAAA,CAAA,EAAA,IAAA,EAAKD,iBAAY,EAAjB,IAAA,EAAA,CAAkB,WAAW,EAAE,CAAC,QAAQ,CAAC,EAAzC,EAAA,EAAA;IAcA,eAAA,EAAA,CAAA,EAAA,IAAA,EAAKA,iBAAY,EAAjB,IAAA,EAAA,CAAkB,SAAS,EAAE,CAAC,QAAQ,CAAC,EAAvC,EAAA,EAAA;;AD1BA,IAAA,SAAA,kBAAA,YAAA;IAII,SAAJ,SAAA,CACgB,OADhB,EAEgB,QAFhB,EAAA;QACgB,IAAhB,CAAA,OAAuB,GAAP,OAAO,CAAvB;QACgB,IAAhB,CAAA,QAAwB,GAAR,QAAQ,CAAxB;QAHA,IAAA,CAAA,eAAA,GAAsC,WAAW,CAAjD;QAKQ,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;QACpC,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,aAAa,CAAC;QAC3C,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;KAEjE;IAGM,SAAX,CAAA,SAAA,CAAA,eAA0B,GAAf,UAAgB,KAAgB,EAA3C;QACQ,KAAK,GAAG,KAAK,CAAC,eAAe,CAAC,IAAI,KAAK,CAAC;QACxC,KAAK,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC;;IAIxB,SAAX,CAAA,SAAA,CAAA,aAAwB,GAAb,UAAc,KAAgB,EAAzC;QACQ,KAAK,GAAG,KAAK,CAAC,eAAe,CAAC,IAAI,KAAK,CAAC;QAExC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE;YACtB,KAAK,CAAC,eAAe,EAAE,CAAC;SAC3B;;;;;IArCT,EAAA,IAAA,EAACE,cAAS,EAAV,IAAA,EAAA,CAAW;gBACP,QAAQ,EAAE,aAAa;aAC1B,EAAD,EAAA;;;IARA,EAAA,IAAA,EAAmCD,eAAU,GAA7C;IAEA,EAAA,IAAA,EAAI,QAAQ,GAAZ;;;IA6BA,iBAAA,EAAA,CAAA,EAAA,IAAA,EAAKD,iBAAY,EAAjB,IAAA,EAAA,CAAkB,WAAW,EAAE,CAAC,QAAQ,CAAC,EAAzC,EAAA,EAAA;IAMA,eAAA,EAAA,CAAA,EAAA,IAAA,EAAKA,iBAAY,EAAjB,IAAA,EAAA,CAAkB,SAAS,EAAE,CAAC,QAAQ,CAAC,EAAvC,EAAA,EAAA;;ADrCA,IAAA,aAAA,kBAAA,YAAA;IAAA,SAAA,aAAA,GAAA;;;;;IAKA,EAAA,IAAA,EAACD,aAAQ,EAAT,IAAA,EAAA,CAAU;gBACN,OAAO,EAAE;oBACLD,mBAAY;iBACf;gBACD,OAAO,EAAE;oBACL,YAAY,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS;iBAC9C;gBACD,eAAe,EAAE,EAAE;gBACnB,YAAY,EAAE,CAAC,YAAY,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,CAAC;gBAC3D,SAAS,EAAE;oBACP,QAAQ;iBACX;aACJ,EAAD,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
}
